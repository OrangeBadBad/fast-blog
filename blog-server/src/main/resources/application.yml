server:
  port: 8888
  servlet:
    context-path: /blog
# ==============MYSQL=====================
spring:
  application:
    name: server-blog
  devtools:
    restart:
      enabled: true
  datasource:
    url: jdbc:mysql://xxxx:3306/blog
    username: mysql
    password: pzc#2018.com
    driver-class-name: com.mysql.jdbc.Driver
    platform: mysql
    type: com.alibaba.druid.pool.DruidDataSource
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: 1
    minIdle: 3
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 30000
    validationQuery: select 'x'
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    #useGlobalDataSourceStat: true

  #======================redis=============================
  redis:
    open: false  # 是否开启redis缓存  true开启   false关闭
    database: 0
    host: xxx
    port: 6379
    password: # 密码（默认为空）Xxfq2017
    timeout: 6000ms  # 连接超时时长（毫秒）
    jedis:
      pool:
        max-active: 1000  # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms    # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 10      # 连接池中的最大空闲连接
        min-idle: 5       # 连接池中的最小空闲连接

  #===========fremaker================
  freemarker:
    charset: UTF-8
    allow-request-override: false
    cache: false
    expose-request-attributes: false
    expose-session-attributes: false
    content-type: text/html
    template-loader-path: classpath:/templates/
    suffix: .html
    expose-spring-macro-helpers: false
    check-template-location: true
  resources:
    chain:
      strategy:
        content:
          paths: classpath:/static/
          enabled: true



#=====================mybatis-plus=======================
mybatis-plus:
  mapper-locations: classpath:/mapper/*Mapper.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.pengzc.*.entity
  #   typeEnumsPackage: com.baomidou.springboot.entity.enums
  global-config:
    # 数据库相关配置
    db-config:
      #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: id_worker
      #字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
      field-strategy: not_empty
      #驼峰下划线转换
      column-underline: true
      #数据库大写下划线转换
      #capital-mode: true
      #逻辑删除配置
      logic-delete-value: 0
      logic-not-delete-value: 1
      db-type: h2
    #刷新mapper 调试神器
    refresh: true
  # 原生配置
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false


#======================== OSS 云存储配置=====================
oss:
  type: 1 # 1:阿里云，2：七牛，3：腾讯云
  cloud:
    first:
      accessKeyId: # 授权ID
      accessKeySecret:  # 授权秘钥
      bucketName: pzcd # 指定桶名
      endPoint: oss-cn-beijing.aliyuncs.com # 访问域名，也指文件存储在哪个区域节点，如华北1
      styleName:   # 指定访问文件样式，可对图片精选模糊压缩等改变<非必传项>。此值同样是在阿里云设置的
      prefix: admin
    second:
      accessKeyId:  # 授权ID
      accessKeySecret:  # 授权秘钥
      bucketName: pzcd
      endPoint: oss-cn-beijing.aliyuncs.com
      styleName:
      prefix: user
    domain: http://oss.znphjf.com # 域名
    defalut:
      accessKeyId:  # 授权ID
      accessKeySecret:  # 授权秘钥
      bucketName: pzcd # 指定桶名
      endPoint: oss-cn-beijing.aliyuncs.com # 访问域名，也指文件存储在哪个区域节点，如华北1
      styleName:   # 指定访问文件样式，可对图片精选模糊压缩等改变<非必传项>。此值同样是在阿里云设置的
      prefix: default




